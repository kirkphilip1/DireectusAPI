# coding: utf-8

"""
    Dynamic API Specification

    This is a dynamically generated API specification for all endpoints existing on the current project.  # noqa: E501

    OpenAPI spec version: 10.10.5
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class ItemsSessionData(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'str',
        'source_id': 'OneOfItemsSessionDataSourceId',
        'session_cookie': 'object',
        'created_at': 'str',
        'expired': 'bool'
    }

    attribute_map = {
        'id': 'id',
        'source_id': 'source_id',
        'session_cookie': 'session_cookie',
        'created_at': 'created_at',
        'expired': 'expired'
    }

    def __init__(self, id=None, source_id=None, session_cookie=None, created_at=None, expired=None):  # noqa: E501
        """ItemsSessionData - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._source_id = None
        self._session_cookie = None
        self._created_at = None
        self._expired = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if source_id is not None:
            self.source_id = source_id
        if session_cookie is not None:
            self.session_cookie = session_cookie
        if created_at is not None:
            self.created_at = created_at
        if expired is not None:
            self.expired = expired

    @property
    def id(self):
        """Gets the id of this ItemsSessionData.  # noqa: E501


        :return: The id of this ItemsSessionData.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ItemsSessionData.


        :param id: The id of this ItemsSessionData.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def source_id(self):
        """Gets the source_id of this ItemsSessionData.  # noqa: E501


        :return: The source_id of this ItemsSessionData.  # noqa: E501
        :rtype: OneOfItemsSessionDataSourceId
        """
        return self._source_id

    @source_id.setter
    def source_id(self, source_id):
        """Sets the source_id of this ItemsSessionData.


        :param source_id: The source_id of this ItemsSessionData.  # noqa: E501
        :type: OneOfItemsSessionDataSourceId
        """

        self._source_id = source_id

    @property
    def session_cookie(self):
        """Gets the session_cookie of this ItemsSessionData.  # noqa: E501


        :return: The session_cookie of this ItemsSessionData.  # noqa: E501
        :rtype: object
        """
        return self._session_cookie

    @session_cookie.setter
    def session_cookie(self, session_cookie):
        """Sets the session_cookie of this ItemsSessionData.


        :param session_cookie: The session_cookie of this ItemsSessionData.  # noqa: E501
        :type: object
        """

        self._session_cookie = session_cookie

    @property
    def created_at(self):
        """Gets the created_at of this ItemsSessionData.  # noqa: E501


        :return: The created_at of this ItemsSessionData.  # noqa: E501
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this ItemsSessionData.


        :param created_at: The created_at of this ItemsSessionData.  # noqa: E501
        :type: str
        """

        self._created_at = created_at

    @property
    def expired(self):
        """Gets the expired of this ItemsSessionData.  # noqa: E501


        :return: The expired of this ItemsSessionData.  # noqa: E501
        :rtype: bool
        """
        return self._expired

    @expired.setter
    def expired(self, expired):
        """Sets the expired of this ItemsSessionData.


        :param expired: The expired of this ItemsSessionData.  # noqa: E501
        :type: bool
        """

        self._expired = expired

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ItemsSessionData, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ItemsSessionData):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
