# coding: utf-8

"""
    Dynamic API Specification

    This is a dynamically generated API specification for all endpoints existing on the current project.  # noqa: E501

    OpenAPI spec version: 10.10.5
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class ItemsPurchasedSongs(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'str',
        'source_id': 'OneOfItemsPurchasedSongsSourceId',
        'kv_song_id': 'int',
        'artist': 'str',
        'artist_url': 'str',
        'title': 'str',
        'title_url': 'str',
        'order_date': 'date',
        'download_url': 'str',
        'local_path': 'str',
        'dl_complete': 'bool',
        'date_added': 'str',
        'last_scraped': 'str'
    }

    attribute_map = {
        'id': 'id',
        'source_id': 'source_id',
        'kv_song_id': 'kv_song_id',
        'artist': 'artist',
        'artist_url': 'artist_url',
        'title': 'title',
        'title_url': 'title_url',
        'order_date': 'order_date',
        'download_url': 'download_url',
        'local_path': 'local_path',
        'dl_complete': 'dl_complete',
        'date_added': 'date_added',
        'last_scraped': 'last_scraped'
    }

    def __init__(self, id=None, source_id=None, kv_song_id=None, artist=None, artist_url=None, title=None, title_url=None, order_date=None, download_url=None, local_path=None, dl_complete=None, date_added=None, last_scraped=None):  # noqa: E501
        """ItemsPurchasedSongs - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._source_id = None
        self._kv_song_id = None
        self._artist = None
        self._artist_url = None
        self._title = None
        self._title_url = None
        self._order_date = None
        self._download_url = None
        self._local_path = None
        self._dl_complete = None
        self._date_added = None
        self._last_scraped = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if source_id is not None:
            self.source_id = source_id
        if kv_song_id is not None:
            self.kv_song_id = kv_song_id
        if artist is not None:
            self.artist = artist
        if artist_url is not None:
            self.artist_url = artist_url
        if title is not None:
            self.title = title
        if title_url is not None:
            self.title_url = title_url
        if order_date is not None:
            self.order_date = order_date
        if download_url is not None:
            self.download_url = download_url
        if local_path is not None:
            self.local_path = local_path
        if dl_complete is not None:
            self.dl_complete = dl_complete
        if date_added is not None:
            self.date_added = date_added
        if last_scraped is not None:
            self.last_scraped = last_scraped

    @property
    def id(self):
        """Gets the id of this ItemsPurchasedSongs.  # noqa: E501


        :return: The id of this ItemsPurchasedSongs.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ItemsPurchasedSongs.


        :param id: The id of this ItemsPurchasedSongs.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def source_id(self):
        """Gets the source_id of this ItemsPurchasedSongs.  # noqa: E501


        :return: The source_id of this ItemsPurchasedSongs.  # noqa: E501
        :rtype: OneOfItemsPurchasedSongsSourceId
        """
        return self._source_id

    @source_id.setter
    def source_id(self, source_id):
        """Sets the source_id of this ItemsPurchasedSongs.


        :param source_id: The source_id of this ItemsPurchasedSongs.  # noqa: E501
        :type: OneOfItemsPurchasedSongsSourceId
        """

        self._source_id = source_id

    @property
    def kv_song_id(self):
        """Gets the kv_song_id of this ItemsPurchasedSongs.  # noqa: E501


        :return: The kv_song_id of this ItemsPurchasedSongs.  # noqa: E501
        :rtype: int
        """
        return self._kv_song_id

    @kv_song_id.setter
    def kv_song_id(self, kv_song_id):
        """Sets the kv_song_id of this ItemsPurchasedSongs.


        :param kv_song_id: The kv_song_id of this ItemsPurchasedSongs.  # noqa: E501
        :type: int
        """

        self._kv_song_id = kv_song_id

    @property
    def artist(self):
        """Gets the artist of this ItemsPurchasedSongs.  # noqa: E501


        :return: The artist of this ItemsPurchasedSongs.  # noqa: E501
        :rtype: str
        """
        return self._artist

    @artist.setter
    def artist(self, artist):
        """Sets the artist of this ItemsPurchasedSongs.


        :param artist: The artist of this ItemsPurchasedSongs.  # noqa: E501
        :type: str
        """

        self._artist = artist

    @property
    def artist_url(self):
        """Gets the artist_url of this ItemsPurchasedSongs.  # noqa: E501


        :return: The artist_url of this ItemsPurchasedSongs.  # noqa: E501
        :rtype: str
        """
        return self._artist_url

    @artist_url.setter
    def artist_url(self, artist_url):
        """Sets the artist_url of this ItemsPurchasedSongs.


        :param artist_url: The artist_url of this ItemsPurchasedSongs.  # noqa: E501
        :type: str
        """

        self._artist_url = artist_url

    @property
    def title(self):
        """Gets the title of this ItemsPurchasedSongs.  # noqa: E501


        :return: The title of this ItemsPurchasedSongs.  # noqa: E501
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this ItemsPurchasedSongs.


        :param title: The title of this ItemsPurchasedSongs.  # noqa: E501
        :type: str
        """

        self._title = title

    @property
    def title_url(self):
        """Gets the title_url of this ItemsPurchasedSongs.  # noqa: E501


        :return: The title_url of this ItemsPurchasedSongs.  # noqa: E501
        :rtype: str
        """
        return self._title_url

    @title_url.setter
    def title_url(self, title_url):
        """Sets the title_url of this ItemsPurchasedSongs.


        :param title_url: The title_url of this ItemsPurchasedSongs.  # noqa: E501
        :type: str
        """

        self._title_url = title_url

    @property
    def order_date(self):
        """Gets the order_date of this ItemsPurchasedSongs.  # noqa: E501


        :return: The order_date of this ItemsPurchasedSongs.  # noqa: E501
        :rtype: date
        """
        return self._order_date

    @order_date.setter
    def order_date(self, order_date):
        """Sets the order_date of this ItemsPurchasedSongs.


        :param order_date: The order_date of this ItemsPurchasedSongs.  # noqa: E501
        :type: date
        """

        self._order_date = order_date

    @property
    def download_url(self):
        """Gets the download_url of this ItemsPurchasedSongs.  # noqa: E501


        :return: The download_url of this ItemsPurchasedSongs.  # noqa: E501
        :rtype: str
        """
        return self._download_url

    @download_url.setter
    def download_url(self, download_url):
        """Sets the download_url of this ItemsPurchasedSongs.


        :param download_url: The download_url of this ItemsPurchasedSongs.  # noqa: E501
        :type: str
        """

        self._download_url = download_url

    @property
    def local_path(self):
        """Gets the local_path of this ItemsPurchasedSongs.  # noqa: E501


        :return: The local_path of this ItemsPurchasedSongs.  # noqa: E501
        :rtype: str
        """
        return self._local_path

    @local_path.setter
    def local_path(self, local_path):
        """Sets the local_path of this ItemsPurchasedSongs.


        :param local_path: The local_path of this ItemsPurchasedSongs.  # noqa: E501
        :type: str
        """

        self._local_path = local_path

    @property
    def dl_complete(self):
        """Gets the dl_complete of this ItemsPurchasedSongs.  # noqa: E501


        :return: The dl_complete of this ItemsPurchasedSongs.  # noqa: E501
        :rtype: bool
        """
        return self._dl_complete

    @dl_complete.setter
    def dl_complete(self, dl_complete):
        """Sets the dl_complete of this ItemsPurchasedSongs.


        :param dl_complete: The dl_complete of this ItemsPurchasedSongs.  # noqa: E501
        :type: bool
        """

        self._dl_complete = dl_complete

    @property
    def date_added(self):
        """Gets the date_added of this ItemsPurchasedSongs.  # noqa: E501


        :return: The date_added of this ItemsPurchasedSongs.  # noqa: E501
        :rtype: str
        """
        return self._date_added

    @date_added.setter
    def date_added(self, date_added):
        """Sets the date_added of this ItemsPurchasedSongs.


        :param date_added: The date_added of this ItemsPurchasedSongs.  # noqa: E501
        :type: str
        """

        self._date_added = date_added

    @property
    def last_scraped(self):
        """Gets the last_scraped of this ItemsPurchasedSongs.  # noqa: E501


        :return: The last_scraped of this ItemsPurchasedSongs.  # noqa: E501
        :rtype: str
        """
        return self._last_scraped

    @last_scraped.setter
    def last_scraped(self, last_scraped):
        """Sets the last_scraped of this ItemsPurchasedSongs.


        :param last_scraped: The last_scraped of this ItemsPurchasedSongs.  # noqa: E501
        :type: str
        """

        self._last_scraped = last_scraped

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ItemsPurchasedSongs, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ItemsPurchasedSongs):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
